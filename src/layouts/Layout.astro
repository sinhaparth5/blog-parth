---
export interface Props {
	title?: string;
	description?: string;
	author?: string;
	image?: string;
	imageAlt?: string;
	keywords?: string[];
	type?: 'website' | 'article' | 'blog';
	publishedTime?: string;
	modifiedTime?: string;
	section?: string;
	tags?: string[];
	canonicalURL?: string;
}

const {
	title = "Your Blog Title",
	description = "Your blog description - engaging content about your topics",
	author = "Your Name",
	image = "/default-og-image.jpg",
	imageAlt = "Default blog image",
	keywords = [],
	type = "website",
	publishedTime,
	modifiedTime,
	section,
	tags = [],
	canonicalURL
} = Astro.props;

const siteTitle = title === "Your Blog Title" ? title : `${title} | Your Blog Name`;
const allKeywords = [...keywords, ...tags].join(", ");
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		
		<!-- Primary Meta Tags -->
		<title>{siteTitle}</title>
		<meta name="title" content={siteTitle} />
		<meta name="description" content={description} />
		<meta name="author" content={author} />
		{allKeywords && <meta name="keywords" content={allKeywords} />}
		
		<!-- Canonical URL (uncomment when ready for production) -->
		<!-- {canonicalURL && <link rel="canonical" href={canonicalURL} />} -->
		
		<!-- Open Graph / Facebook -->
		<meta property="og:type" content={type} />
		<meta property="og:title" content={siteTitle} />
		<meta property="og:description" content={description} />
		<meta property="og:image" content={image} />
		<meta property="og:image:alt" content={imageAlt} />
		<meta property="og:locale" content="en_US" />
		<meta property="og:site_name" content="Your Blog Name" />
		
		<!-- Article-specific Open Graph tags -->
		{type === 'article' && (
			<>
				<meta property="article:author" content={author} />
				{publishedTime && <meta property="article:published_time" content={publishedTime} />}
				{modifiedTime && <meta property="article:modified_time" content={modifiedTime} />}
				{section && <meta property="article:section" content={section} />}
				{tags.map((tag) => (
					<meta property="article:tag" content={tag} />
				))}
			</>
		)}
		
		<!-- Twitter Card -->
		<meta name="twitter:card" content="summary_large_image" />
		<meta name="twitter:title" content={siteTitle} />
		<meta name="twitter:description" content={description} />
		<meta name="twitter:image" content={image} />
		<meta name="twitter:image:alt" content={imageAlt} />
		<!-- <meta name="twitter:site" content="@yourtwitterhandle" /> -->
		<!-- <meta name="twitter:creator" content="@yourtwitterhandle" /> -->
		
		<!-- Additional SEO Meta Tags -->
		<meta name="robots" content="index, follow" />
		<meta name="googlebot" content="index, follow" />
		<meta name="language" content="English" />
		<meta name="revisit-after" content="7 days" />
		
		<!-- Favicon and Apple Touch Icons -->
		<link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
		<link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png" />
		<link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png" />
		<link rel="manifest" href="/site.webmanifest" />
		<meta name="theme-color" content="#ffffff" />
		
		<!-- Preconnect to external domains for performance -->
		<link rel="preconnect" href="https://fonts.googleapis.com" />
		<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
		
		<!-- JSON-LD Structured Data -->
		<script type="application/ld+json">
			{
				"@context": "https://schema.org",
				"@type": type === 'article' ? "BlogPosting" : "WebSite",
				"headline": title,
				"description": description,
				"image": image,
				"author": {
					"@type": "Person",
					"name": author
				},
				...(publishedTime && { "datePublished": publishedTime }),
				...(modifiedTime && { "dateModified": modifiedTime }),
				"publisher": {
					"@type": "Organization",
					"name": "Your Blog Name",
					"logo": {
						"@type": "ImageObject",
						"url": "/logo.png"
					}
				}
			}
		</script>
	</head>
	<body>
		<slot />
	</body>
</html>

<style>
	html,
	body {
		margin: 0;
		width: 100%;
		height: 100%;
		max-width: 54rem;
		margin: 0 auto;
		background-color: var(--color-shark-950);
	}
	
	/* Improve text rendering */
	body {
		-webkit-font-smoothing: antialiased;
		-moz-osx-font-smoothing: grayscale;
		text-rendering: optimizeLegibility;
	}
</style>
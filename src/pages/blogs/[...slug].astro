---
// src/pages/blogs/[...slug].astro
import { getCollection, getEntry, type CollectionEntry } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import styles from '../../assets/styles/blogs.module.scss'
import { Image } from 'astro:assets';

// Define static paths for all blog posts
export async function getStaticPaths() {
  const posts = await getCollection('blog') as CollectionEntry<'blog'>[];
  return posts.map((post) => ({
    params: { slug: post.slug },
  }));
}

// Get the current post based on the slug
const { slug } = Astro.params as { slug: string };
const post = await getEntry('blog', slug);

if (!post) {
  return Astro.redirect('/404');
}

const { Content } = await post.render();
---

<Layout
  title={post.data.title}
  description={post.data.description}
  author="Your Name"
  image={post.data.image || '/default-og-image.jpg'}
  imageAlt={post.data.title}
  keywords={['blog', 'article', ...(post.data.tags || [])]}
  type="article"
  publishedTime={post.data.pubDate.toISOString()}
  section="Blog"
  tags={post.data.tags || []}
  canonicalURL={`https://yourwebsite.com/blogs/${post.slug}`}
>
  <!-- KaTeX CSS -->
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/katex@0.16.8/dist/katex.min.css" integrity="sha384-GvrOXuhMATgEsSwCs4smul74iXGOixntILdUW9XmUC6+HX0sLNAK3q71HotJqlAn" crossorigin="anonymous">

  <header class={styles.header}>
    <h1 class={styles.postTitle}>{post.data.title}</h1>
    <p class={styles.postMeta}>
      Published on {post.data.pubDate.toLocaleDateString('en-US', {
        year: 'numeric',
        month: 'long',
        day: 'numeric',
      })}
    </p>
  </header>

  <main class={styles.main}>
    <article class={styles.postContent}>
      {post.data.image && (
        <Image
          src={post.data.image}
          alt={post.data.title}
          width="600"
          height="400"
          class={styles.postImage}
        />
      )}
      <div class={styles.postBody} id="post-content">
        <Content />
      </div>
      {post.data.tags && (
        <ul class={styles.postTags}>
          {post.data.tags.map((tag: string) => (
            <li class={styles.tag}>{tag}</li>
          ))}
        </ul>
      )}
    </article>
  </main>

  <!-- KaTeX JavaScript -->
  <script src="https://cdn.jsdelivr.net/npm/katex@0.16.8/dist/katex.min.js" integrity="sha384-cpW21h6RZv/phavutF+AuVYrr+dA8xD9zs6FwLpaCct6O9ctzYFfFr4dgmgccOTx" crossorigin="anonymous" is:inline></script>
  <script src="https://cdn.jsdelivr.net/npm/katex@0.16.8/dist/contrib/auto-render.min.js" integrity="sha384-+VBxd3r6XgURycqtZ117nYw44OOcIax56Z4dCRWbxyPt0Koah1uHoK0o4+/RRE05" crossorigin="anonymous" is:inline></script>
  
  <script is:inline>
    document.addEventListener("DOMContentLoaded", function() {
      renderMathInElement(document.getElementById("post-content"), {
        // Delimiters for inline and display math
        delimiters: [
          {left: '$$', right: '$$', display: true},
          {left: '$', right: '$', display: false},
          {left: '\\(', right: '\\)', display: false},
          {left: '\\[', right: '\\]', display: true}
        ],
        // Skip elements with these classes
        ignoredClasses: ["katex-ignore"],
        // Process elements with these classes
        processedClasses: ["katex-process"],
        // Throw on error or just log and continue
        throwOnError: false,
        // Enable macro support
        macros: {
          "\\mathbb{R}": "\\R",
          "\\mathbb{N}": "\\N", 
          "\\mathbb{Z}": "\\Z",
          "\\mathbb{Q}": "\\Q",
          "\\mathbb{C}": "\\C",
          "\\R": "\\mathbf{R}",
          "\\N": "\\mathbf{N}",
          "\\Z": "\\mathbf{Z}", 
          "\\Q": "\\mathbf{Q}",
          "\\C": "\\mathbf{C}"
        }
      });
    });
  </script>

  <!-- Custom CSS for better LaTeX styling -->
  <style is:inline>
    /* Ensure inline math doesn't break line height */
    .katex {
      font-size: 1em !important;
    }
    
    /* Display math centering */
    .katex-display {
      margin: 1.5em 0;
      text-align: center;
    }
    
    /* Inline math styling */
    .katex-inline {
      vertical-align: baseline;
    }
  </style>
</Layout>